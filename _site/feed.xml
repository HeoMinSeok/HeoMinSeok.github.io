

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>MINDDO</title>
  <subtitle>MINDDO의 코딩 기록장</subtitle>
  <updated>2024-07-20T16:21:42+09:00</updated>
  <author>
    <name>Minddo</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Minddo </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[유데미x스나이퍼팩토리] 프로젝트 캠프 : Next.js 2기 - 학습 일지 1주차</title>
    <link href="http://localhost:4000/posts/%ED%95%99%EC%8A%B5%EC%9D%BC%EC%A7%80/" rel="alternate" type="text/html" title="[유데미x스나이퍼팩토리] 프로젝트 캠프 : Next.js 2기 - 학습 일지 1주차" />
    <published>2024-07-20T00:00:00+09:00</published>
  
    <updated>2024-07-20T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%ED%95%99%EC%8A%B5%EC%9D%BC%EC%A7%80/</id>
    <content src="http://localhost:4000/posts/%ED%95%99%EC%8A%B5%EC%9D%BC%EC%A7%80/" />
    <author>
      <name>Minddo</name>
    </author>

  
    
    <category term="Next.js 직무교육" />
    
    <category term="1주차" />
    
  

  <summary></summary>

  </entry>

  
  <entry>
    <title>[유데미x스나이퍼팩토리] 프로젝트 캠프 : Next.js 2기 - 직무교육 1일차</title>
    <link href="http://localhost:4000/posts/%EC%88%98%EC%97%85-%EB%82%B4%EC%9A%A9-%EC%A0%80%EB%A6%AC/" rel="alternate" type="text/html" title="[유데미x스나이퍼팩토리] 프로젝트 캠프 : Next.js 2기 - 직무교육 1일차" />
    <published>2024-07-15T00:00:00+09:00</published>
  
    <updated>2024-07-15T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%88%98%EC%97%85-%EB%82%B4%EC%9A%A9-%EC%A0%80%EB%A6%AC/</id>
    <content src="http://localhost:4000/posts/%EC%88%98%EC%97%85-%EB%82%B4%EC%9A%A9-%EC%A0%80%EB%A6%AC/" />
    <author>
      <name>Minddo</name>
    </author>

  
    
    <category term="Next.js 직무교육" />
    
    <category term="JavaScript" />
    
  

  <summary>🚀 JavaScript를 실행 시키는 방법
1️⃣ node 명령어를 사용

  우선 실행시킬 js 파일로 이동한다.
    #  ex
cd Desktop/my-app/next-study.js
    
  
  node 명령어로 실행
    node next-study.js
    
  


2️⃣ code runner 익스텐션을 사용
 Code Runner

  vscode Extensions -&amp;amp;gt; code runner 검색 후 설치
  실행시킬 js 파일에서 출력할 결과 console.log 작성 후 ⇧ + space


3️⃣ html 파일에서 script 태그를 사용

  외부 스크립트
    
      head 태그 사이
    

    &amp;amp;lt;head&amp;amp;gt;
  &amp;amp;lt;meta cha...</summary>

  </entry>

  
  <entry>
    <title>VITE - Spring Boot CORS 설정</title>
    <link href="http://localhost:4000/posts/CORS-%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="VITE - Spring Boot CORS 설정" />
    <published>2024-07-11T00:00:00+09:00</published>
  
    <updated>2024-07-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/CORS-%EC%84%A4%EC%A0%95/</id>
    <content src="http://localhost:4000/posts/CORS-%EC%84%A4%EC%A0%95/" />
    <author>
      <name>Minddo</name>
    </author>

  
    
    <category term="프로젝트" />
    
    <category term="PETSTAGRAM" />
    
  

  <summary>웹 개발에서의 CORS 설정

CORS란?

CORS(Cross-Origin Resource Sharing)는 웹 애플리케이션이 하나의 출처에서 실행되는 리소스가 다른 출처의 리소스에 접근할 수 있도록 허용하는 보안 기능이다. 웹 브라우저는 보안상의 이유로 기본적으로 다른 출처(도메인, 프로토콜, 포트)의 리소스에 접근하는 것을 제한한다. 이러한 제약을 동일 출처 정책(Same-Origin Policy)이라고 하며, 이를 우회하기 위해 CORS가 도입되었다.

CORS 설정하는 이유

웹 애플리케이션 개발에서 CORS를 설정하는 주된 이유는 다음과 같다.


  다른 출처의 API에 접근하기 위해:
    
      
        웹 애플리케이션은 자주 다른 출처의 API와 상호작용한다. 프론트엔드...</summary>

  </entry>

  
  <entry>
    <title>🐥 My Tech Stack</title>
    <link href="http://localhost:4000/posts/MINDDO-TECH-STACK/" rel="alternate" type="text/html" title="🐥 My Tech Stack" />
    <published>2024-06-30T00:00:00+09:00</published>
  
    <updated>2024-06-30T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/MINDDO-TECH-STACK/</id>
    <content src="http://localhost:4000/posts/MINDDO-TECH-STACK/" />
    <author>
      <name>Minddo</name>
    </author>

  
    
    <category term="Tech Stack" />
    
    <category term="Minddo" />
    
  

  <summary></summary>

  </entry>

  
  <entry>
    <title>JWT + 카카오 소셜 로그인 (5)</title>
    <link href="http://localhost:4000/posts/JWT-+-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-(5)/" rel="alternate" type="text/html" title="JWT + 카카오 소셜 로그인 (5)" />
    <published>2024-06-13T00:00:00+09:00</published>
  
    <updated>2024-06-13T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/JWT-+-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-(5)/</id>
    <content src="http://localhost:4000/posts/JWT-+-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-(5)/" />
    <author>
      <name>Minddo</name>
    </author>

  
    
    <category term="프로젝트" />
    
    <category term="PETSTAGRAM" />
    
  

  <summary>📌 Server Side

4. 클라이언트로부터 전달 받은 인가 코드를 이용하여 카카오 서버에 토큰 요청


  먼저 클라이언트로부터 인가 코드를 받아오는 엔드포인트에서, 카카오 서버에 액세스 토큰을 요청하는 서비스를 호출


/* AuthController.java */
@GetMapping(&amp;quot;/kakao&amp;quot;)
public ResponseEntity&amp;amp;lt;UserDTO&amp;amp;gt; kakaoLogin(@RequestParam String code) {
  UserDTO userDTO = authService.kakaoLogin(code);
  return ResponseEntity.ok(userDTO);
}


/* AuthService - kakaoLogin 메소드 */
public UserDTO kaka...</summary>

  </entry>

</feed>


